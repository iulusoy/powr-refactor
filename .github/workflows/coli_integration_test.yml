name: compile and run coli integation test

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  compile:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.9]
        os: [ubuntu-latest]
        # os: [ubuntu-latest, macos-latest]
        toolchain:
          - {compiler: intel, version: '2023.2'}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        sparse-checkout: |
          src
          build
          powr
          test
    - name: get fortran compiler
      uses: ssciwr/setup-fortran@v0.1
      id: setup-fortran
      with:
        compiler: ${{ matrix.toolchain.compiler }}
        version: ${{ matrix.toolchain.version }}
        install_mkl: "true"
    - name: get compiler version
      run: ${{ env.FC }} --version
      env:
        FC: ${{ steps.setup-fortran.outputs.fc }}
    - name: compile powr
      run: |
        make
      # make clean_build
      # make debug_all
    # - name: get the test models
      # run: |
        # wget -O testmodels.tgz https://heibox.uni-heidelberg.de/f/a62c7ae5559d43a0a8b2/?dl=1
        # tar -xzf testmodels.tgz
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install -r requirements.txt
    - name: run integration tests
      run: |
        cd powr
        ./proc.dir/makechain.com 1
        ./wrjobs/wrstart1
        ls output
        sleep 3600
        ls output
        cat output/wrstart1.out
        cat output/wrstart1.log        
        cat output/wruniq1.out
        cat output/wruniq1.log
        sleep 3600
        cat output/wrstart1.out
        cat output/wrstart1.log        
        cat output/wruniq1.out
        cat output/wruniq1.log
        # python -m pytest -svv test/test_wrstart.py
